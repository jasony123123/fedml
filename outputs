$ python keras_classic.py
2022-01-31 15:18:38.457619: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 10)                7850      
_________________________________________________________________
softmax (Softmax)            (None, 10)                0         
=================================================================
Total params: 7,850
Trainable params: 7,850
Non-trainable params: 0
_________________________________________________________________
2022-01-31 15:18:38.511325: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:176] None of the MLIR Optimization Passes are enabled (registered 2)
Epoch 1/15
422/422 [==============================] - 1s 964us/step - loss: 0.6991 - accuracy: 0.8472 - val_loss: 0.3468 - val_accuracy: 0.9138
Epoch 2/15
422/422 [==============================] - 0s 756us/step - loss: 0.3758 - accuracy: 0.9000 - val_loss: 0.2858 - val_accuracy: 0.9247
Epoch 3/15
422/422 [==============================] - 0s 743us/step - loss: 0.3305 - accuracy: 0.9092 - val_loss: 0.2625 - val_accuracy: 0.9305
Epoch 4/15
422/422 [==============================] - 0s 739us/step - loss: 0.3093 - accuracy: 0.9146 - val_loss: 0.2482 - val_accuracy: 0.9325
Epoch 5/15
422/422 [==============================] - 0s 739us/step - loss: 0.2966 - accuracy: 0.9177 - val_loss: 0.2419 - val_accuracy: 0.9350
Epoch 6/15
422/422 [==============================] - 0s 739us/step - loss: 0.2875 - accuracy: 0.9204 - val_loss: 0.2373 - val_accuracy: 0.9343
Epoch 7/15
422/422 [==============================] - 0s 739us/step - loss: 0.2815 - accuracy: 0.9213 - val_loss: 0.2336 - val_accuracy: 0.9360
Epoch 8/15
422/422 [==============================] - 0s 740us/step - loss: 0.2766 - accuracy: 0.9229 - val_loss: 0.2306 - val_accuracy: 0.9392
Epoch 9/15
422/422 [==============================] - 0s 736us/step - loss: 0.2722 - accuracy: 0.9238 - val_loss: 0.2287 - val_accuracy: 0.9388
Epoch 10/15
422/422 [==============================] - 0s 738us/step - loss: 0.2690 - accuracy: 0.9248 - val_loss: 0.2286 - val_accuracy: 0.9392
Epoch 11/15
422/422 [==============================] - 0s 742us/step - loss: 0.2662 - accuracy: 0.9253 - val_loss: 0.2263 - val_accuracy: 0.9403
Epoch 12/15
422/422 [==============================] - 0s 743us/step - loss: 0.2636 - accuracy: 0.9266 - val_loss: 0.2235 - val_accuracy: 0.9402
Epoch 13/15
422/422 [==============================] - 0s 743us/step - loss: 0.2613 - accuracy: 0.9274 - val_loss: 0.2241 - val_accuracy: 0.9383
Epoch 14/15
422/422 [==============================] - 0s 737us/step - loss: 0.2598 - accuracy: 0.9280 - val_loss: 0.2263 - val_accuracy: 0.9398
Epoch 15/15
422/422 [==============================] - 0s 738us/step - loss: 0.2573 - accuracy: 0.9284 - val_loss: 0.2232 - val_accuracy: 0.9405
Test loss: 0.26423367857933044
Test accuracy: 0.9265999794006348


























round  1
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.12098361), ('loss', 3.0394638)])), ('stat', OrderedDict([('num_examples', 12200)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.09562794), ('loss', 2.3140016)])

round  2
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.13886987), ('loss', 2.951606)])), ('stat', OrderedDict([('num_examples', 11680)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.23515067), ('loss', 2.1446195)])

round  3
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.15135579), ('loss', 2.851757)])), ('stat', OrderedDict([('num_examples', 12170)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.3346107), ('loss', 2.0733654)])

round  4
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.17619048), ('loss', 2.7400658)])), ('stat', OrderedDict([('num_examples', 11760)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.35864833), ('loss', 1.961788)])

round  5
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.19354284), ('loss', 2.6189897)])), ('stat', OrderedDict([('num_examples', 11615)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.503745), ('loss', 1.8638526)])

round  6
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.2143212), ('loss', 2.5587165)])), ('stat', OrderedDict([('num_examples', 12080)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.43529), ('loss', 1.8953747)])

round  7
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.24381375), ('loss', 2.4084983)])), ('stat', OrderedDict([('num_examples', 11275)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.3868664), ('loss', 1.7884682)])

round  8
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.25741702), ('loss', 2.3154485)])), ('stat', OrderedDict([('num_examples', 12505)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.56784534), ('loss', 1.6958642)])

round  9
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.2887543), ('loss', 2.2366433)])), ('stat', OrderedDict([('num_examples', 11560)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.59292805), ('loss', 1.621215)])

round 10
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.29842553), ('loss', 2.1767383)])), ('stat', OrderedDict([('num_examples', 12385)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.5911862), ('loss', 1.5694187)])

round 11
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.3424588), ('loss', 2.043911)])), ('stat', OrderedDict([('num_examples', 11835)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.6272426), ('loss', 1.5291927)])

round 12
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.36016878), ('loss', 1.9698385)])), ('stat', OrderedDict([('num_examples', 11850)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.5338791), ('loss', 1.529507)])

round 13
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.3828176), ('loss', 1.8746854)])), ('stat', OrderedDict([('num_examples', 12280)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7078906), ('loss', 1.4061968)])

round 14
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.3682663), ('loss', 1.9150093)])), ('stat', OrderedDict([('num_examples', 11565)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.613482), ('loss', 1.395556)])

round 15
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.41751036), ('loss', 1.7682806)])), ('stat', OrderedDict([('num_examples', 12050)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7294896), ('loss', 1.3212576)])

round 16
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.4626506), ('loss', 1.6615503)])), ('stat', OrderedDict([('num_examples', 12450)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.62846196), ('loss', 1.3624117)])

round 17
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.4483816), ('loss', 1.718842)])), ('stat', OrderedDict([('num_examples', 11740)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.71468383), ('loss', 1.2680968)])

round 18
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.5090684), ('loss', 1.5484226)])), ('stat', OrderedDict([('num_examples', 12130)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7059746), ('loss', 1.2511557)])

round 19
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.4969697), ('loss', 1.5540198)])), ('stat', OrderedDict([('num_examples', 11385)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.71816754), ('loss', 1.2286184)])

round 20
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.5237751), ('loss', 1.4837905)])), ('stat', OrderedDict([('num_examples', 12450)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7040585), ('loss', 1.1979276)])

round 21
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.55022734), ('loss', 1.4210509)])), ('stat', OrderedDict([('num_examples', 12095)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7308831), ('loss', 1.1573726)])

round 22
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.5592459), ('loss', 1.4150357)])), ('stat', OrderedDict([('num_examples', 12465)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7314057), ('loss', 1.143163)])

round 23
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.5622108), ('loss', 1.3876407)])), ('stat', OrderedDict([('num_examples', 11670)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.69935554), ('loss', 1.1589575)])

round 24
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.60336417), ('loss', 1.2884818)])), ('stat', OrderedDict([('num_examples', 11890)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7380247), ('loss', 1.098866)])

round 25
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.6259133), ('loss', 1.2315034)])), ('stat', OrderedDict([('num_examples', 11770)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7655461), ('loss', 1.0592358)])

round 26
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.62642884), ('loss', 1.2328979)])), ('stat', OrderedDict([('num_examples', 12335)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7658945), ('loss', 1.0361212)])

round 27
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.601904), ('loss', 1.3018275)])), ('stat', OrderedDict([('num_examples', 12080)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.71468383), ('loss', 1.0698701)])

round 28
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.60118544), ('loss', 1.2919587)])), ('stat', OrderedDict([('num_examples', 11810)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7369796), ('loss', 1.0510248)])

round 29
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.6541235), ('loss', 1.1497308)])), ('stat', OrderedDict([('num_examples', 12065)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.74743074), ('loss', 1.0133388)])

round 30
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.6389273), ('loss', 1.198267)])), ('stat', OrderedDict([('num_examples', 12305)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7554433), ('loss', 1.00396)])

round 31
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.6143274), ('loss', 1.2485414)])), ('stat', OrderedDict([('num_examples', 12005)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7627591), ('loss', 0.97224605)])

round 32
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.61159885), ('loss', 1.2703675)])), ('stat', OrderedDict([('num_examples', 12415)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.77669394), ('loss', 0.94920915)])

round 33
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.6584317), ('loss', 1.1329043)])), ('stat', OrderedDict([('num_examples', 11860)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.765128), ('loss', 0.95560086)])

round 34
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.66269183), ('loss', 1.1138567)])), ('stat', OrderedDict([('num_examples', 11405)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.78540325), ('loss', 0.9250547)])

round 35
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7201623), ('loss', 0.99758726)])), ('stat', OrderedDict([('num_examples', 12325)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7859258), ('loss', 0.91990274)])

round 36
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.67963874), ('loss', 1.0799068)])), ('stat', OrderedDict([('num_examples', 12180)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7641526), ('loss', 0.92805874)])

round 37
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.68095046), ('loss', 1.0596572)])), ('stat', OrderedDict([('num_examples', 12415)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7638042), ('loss', 0.921698)])

round 38
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.66544086), ('loss', 1.1287439)])), ('stat', OrderedDict([('num_examples', 11965)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7798293), ('loss', 0.8934856)])

round 39
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.72247785), ('loss', 0.9714797)])), ('stat', OrderedDict([('num_examples', 11300)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7820937), ('loss', 0.8811967)])

round 40
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.75522995), ('loss', 0.90259266)])), ('stat', OrderedDict([('num_examples', 12285)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7847065), ('loss', 0.8724935)])

round 41
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.72288644), ('loss', 0.97185785)])), ('stat', OrderedDict([('num_examples', 11710)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.77425534), ('loss', 0.875465)])

round 42
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.73047775), ('loss', 0.94902724)])), ('stat', OrderedDict([('num_examples', 12140)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.78644836), ('loss', 0.8595067)])

round 43
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.72454846), ('loss', 0.9703073)])), ('stat', OrderedDict([('num_examples', 12180)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.79254484), ('loss', 0.84835374)])

round 44
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.713738), ('loss', 0.9935793)])), ('stat', OrderedDict([('num_examples', 12520)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.79010624), ('loss', 0.8426349)])

round 45
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7109868), ('loss', 0.99775946)])), ('stat', OrderedDict([('num_examples', 12515)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7930674), ('loss', 0.8307483)])

round 46
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7318962), ('loss', 0.95208335)])), ('stat', OrderedDict([('num_examples', 12525)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7979446), ('loss', 0.82206964)])

round 47
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.73642653), ('loss', 0.93128467)])), ('stat', OrderedDict([('num_examples', 12285)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7740812), ('loss', 0.84823877)])

round 48
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.77520126), ('loss', 0.84528995)])), ('stat', OrderedDict([('num_examples', 12420)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.78331304), ('loss', 0.8211167)])

round 49
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.77796745), ('loss', 0.8063623)])), ('stat', OrderedDict([('num_examples', 12300)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7897579), ('loss', 0.80812275)])

round 50
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.762935), ('loss', 0.86451167)])), ('stat', OrderedDict([('num_examples', 11925)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7942867), ('loss', 0.8020733)])

round 51
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.73154813), ('loss', 0.94612545)])), ('stat', OrderedDict([('num_examples', 11950)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80020905), ('loss', 0.79208636)])

round 52
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7748122), ('loss', 0.82623154)])), ('stat', OrderedDict([('num_examples', 11315)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7918481), ('loss', 0.7957092)])

round 53
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7450716), ('loss', 0.90072876)])), ('stat', OrderedDict([('num_examples', 11870)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7873193), ('loss', 0.798976)])

round 54
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7310597), ('loss', 0.9277276)])), ('stat', OrderedDict([('num_examples', 12315)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7934158), ('loss', 0.78104764)])

round 55
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.77173483), ('loss', 0.82620496)])), ('stat', OrderedDict([('num_examples', 12595)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80334437), ('loss', 0.77107376)])

round 56
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.75874585), ('loss', 0.8579642)])), ('stat', OrderedDict([('num_examples', 12120)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8042153), ('loss', 0.76545465)])

round 57
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.77931315), ('loss', 0.7937922)])), ('stat', OrderedDict([('num_examples', 12230)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7885386), ('loss', 0.7858922)])

round 58
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7782809), ('loss', 0.80674094)])), ('stat', OrderedDict([('num_examples', 11925)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7855774), ('loss', 0.7826485)])

round 59
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.76018876), ('loss', 0.82047385)])), ('stat', OrderedDict([('num_examples', 11655)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7951576), ('loss', 0.7637386)])

round 60
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7782553), ('loss', 0.7998385)])), ('stat', OrderedDict([('num_examples', 11635)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8005574), ('loss', 0.7566431)])

round 61
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7506019), ('loss', 0.85908675)])), ('stat', OrderedDict([('num_examples', 12045)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80456364), ('loss', 0.7438339)])

round 62
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7454623), ('loss', 0.8691108)])), ('stat', OrderedDict([('num_examples', 11735)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.790803), ('loss', 0.75356156)])

round 63
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7803005), ('loss', 0.7785454)])), ('stat', OrderedDict([('num_examples', 11980)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7923707), ('loss', 0.7515877)])

round 64
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.78875715), ('loss', 0.7445427)])), ('stat', OrderedDict([('num_examples', 11385)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7989897), ('loss', 0.7436265)])

round 65
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7831408), ('loss', 0.7877457)])), ('stat', OrderedDict([('num_examples', 11685)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.807699), ('loss', 0.7307561)])

round 66
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7979449), ('loss', 0.7199025)])), ('stat', OrderedDict([('num_examples', 12165)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.79498345), ('loss', 0.7438334)])

round 67
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.79168975), ('loss', 0.75797564)])), ('stat', OrderedDict([('num_examples', 12635)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80334437), ('loss', 0.7279704)])

round 68
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8169435), ('loss', 0.70589375)])), ('stat', OrderedDict([('num_examples', 12040)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8014283), ('loss', 0.7297222)])

round 69
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7848027), ('loss', 0.77965575)])), ('stat', OrderedDict([('num_examples', 11910)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.79777044), ('loss', 0.73817277)])

round 70
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7926697), ('loss', 0.73867553)])), ('stat', OrderedDict([('num_examples', 12005)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80491203), ('loss', 0.7198341)])

round 71
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7874096), ('loss', 0.75732094)])), ('stat', OrderedDict([('num_examples', 11755)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8014283), ('loss', 0.72071165)])

round 72
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7895652), ('loss', 0.74628985)])), ('stat', OrderedDict([('num_examples', 12075)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7989897), ('loss', 0.7218875)])

round 73
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8162819), ('loss', 0.675394)])), ('stat', OrderedDict([('num_examples', 12345)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8010799), ('loss', 0.7168493)])

round 74
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8132107), ('loss', 0.70055926)])), ('stat', OrderedDict([('num_examples', 11960)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80334437), ('loss', 0.71053123)])

round 75
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7958541), ('loss', 0.7231474)])), ('stat', OrderedDict([('num_examples', 12060)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.802996), ('loss', 0.71282905)])

round 76
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8215088), ('loss', 0.66873497)])), ('stat', OrderedDict([('num_examples', 12460)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8024734), ('loss', 0.71216136)])

round 77
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.81890094), ('loss', 0.6677334)])), ('stat', OrderedDict([('num_examples', 12010)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8101376), ('loss', 0.69322145)])

round 78
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.7971879), ('loss', 0.72327375)])), ('stat', OrderedDict([('num_examples', 11735)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8066539), ('loss', 0.69837666)])

round 79
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8070529), ('loss', 0.714736)])), ('stat', OrderedDict([('num_examples', 11910)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8038669), ('loss', 0.7041367)])

round 80
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.81142145), ('loss', 0.6966524)])), ('stat', OrderedDict([('num_examples', 11995)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80595714), ('loss', 0.70051146)])

round 81
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8072633), ('loss', 0.7138807)])), ('stat', OrderedDict([('num_examples', 11565)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80456364), ('loss', 0.69847995)])

round 82
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.82575506), ('loss', 0.6502863)])), ('stat', OrderedDict([('num_examples', 11920)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8092667), ('loss', 0.6906782)])

round 83
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8218652), ('loss', 0.68650556)])), ('stat', OrderedDict([('num_examples', 12760)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7895837), ('loss', 0.7059991)])

round 84
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.80074847), ('loss', 0.68757707)])), ('stat', OrderedDict([('num_examples', 12025)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80944085), ('loss', 0.6845206)])

round 85
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.817608), ('loss', 0.6706028)])), ('stat', OrderedDict([('num_examples', 12040)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.81187946), ('loss', 0.67946965)])

round 86
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8467172), ('loss', 0.602517)])), ('stat', OrderedDict([('num_examples', 11880)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8103118), ('loss', 0.6821522)])

round 87
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8065915), ('loss', 0.6986608)])), ('stat', OrderedDict([('num_examples', 11530)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8090925), ('loss', 0.6785753)])

round 88
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8238485), ('loss', 0.63313895)])), ('stat', OrderedDict([('num_examples', 11615)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80264765), ('loss', 0.68378717)])

round 89
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.83349115), ('loss', 0.6205168)])), ('stat', OrderedDict([('num_examples', 11615)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8130988), ('loss', 0.6713031)])

round 90
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8031936), ('loss', 0.6905585)])), ('stat', OrderedDict([('num_examples', 12525)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.81187946), ('loss', 0.6716371)])

round 91
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.82205063), ('loss', 0.6457906)])), ('stat', OrderedDict([('num_examples', 11655)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8130988), ('loss', 0.6681567)])

round 92
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.82266897), ('loss', 0.6455494)])), ('stat', OrderedDict([('num_examples', 11690)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.7989897), ('loss', 0.69083905)])

round 93
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8134037), ('loss', 0.6691802)])), ('stat', OrderedDict([('num_examples', 12310)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8127504), ('loss', 0.6674399)])

round 94
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8033969), ('loss', 0.6996994)])), ('stat', OrderedDict([('num_examples', 12070)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8164083), ('loss', 0.65749156)])

round 95
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.85885245), ('loss', 0.55996156)])), ('stat', OrderedDict([('num_examples', 12200)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.81536317), ('loss', 0.65764713)])

round 96
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.84577924), ('loss', 0.59076786)])), ('stat', OrderedDict([('num_examples', 12320)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80334437), ('loss', 0.67845494)])

round 97
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.84804654), ('loss', 0.5678799)])), ('stat', OrderedDict([('num_examples', 12030)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8120536), ('loss', 0.6598134)])

round 98
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8113394), ('loss', 0.65265465)])), ('stat', OrderedDict([('num_examples', 12170)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8090925), ('loss', 0.663804)])

round 99
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.8177182), ('loss', 0.63833225)])), ('stat', OrderedDict([('num_examples', 11570)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.80334437), ('loss', 0.6756639)])

round 100
train_metrics=OrderedDict([('broadcast', ()), ('aggregation', OrderedDict([('mean_value', ()), ('mean_weight', ())])), ('train', OrderedDict([('sparse_categorical_accuracy', 0.82938915), ('loss', 0.618747)])), ('stat', OrderedDict([('num_examples', 11705)]))])
train_metrics=OrderedDict([('sparse_categorical_accuracy', 0.8139697), ('loss', 0.65714025)])

